{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;AAER,gBAAQ,EAAG,EAAE;;AAEb,WAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;AAEhB,iBAAS,EAAG,KAAK;;KAEpB;;AAED,mBAAe,EAAE,yBAAS,GAAG,EAAC;AAC1B,YAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;KAE7D;;AAEF,eAAW,EAAA,qBAAC,CAAC,EAAC,CAAC,EAAC;AACd,YAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAGf,YAAI,CAAC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,EAAE,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACpD;;AAEA,UAAM,EAAE,kBAAY;AACf,UAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;KAGrD;;AAGD,oBAAgB,EAAE,0BAAU,KAAK,EAAE,IAAI,EAAE;AACrC,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,YAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;KAI9B;;AAED,mBAAe,EAAE,yBAAU,KAAK,EAAE,IAAI,EAAE;AACpC,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;AAEtB,YAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;AACjC,YAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AACvC,YAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;;;;;;AAMjC,YAAI,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;AAC/C,gBAAI,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE;AAChC,oBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;aACpB,MACI,IAAI,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE;AACrC,oBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;aACpB;SAEJ;;AAED,gBAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,YAAI,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE;AAC/C,gBAAI,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE;AAChC,oBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;aAEpB,MACI,IAAI,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE;AACrC,oBAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;aACpB;SAEJ;;;KAGJ;;AAED,mBAAe,EAAE,2BAAY;AAC1B,YAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACzB;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;;KAsBrB;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       \r\n        AnimName : '',\r\n        \r\n        loc: cc.v2(0, 0),\r\n        \r\n        collision : false,\r\n        \r\n    },\r\n    \r\n    changeDirection: function(dir){\r\n        this.getComponent(cc.Animation).play(this.AnimName + dir);\r\n        \r\n    },\r\n\r\n   moveToPoint(x,y){\r\n     this.loc.x = x;\r\n     this.loc.y = y;\r\n     \r\n     //cc.moveTo(1,cc.p(x, y));\r\n     if (!this.collision)\r\n          this.node.runAction( cc.moveTo(1,cc.p(x, y)));\r\n   },\r\n\r\n    onLoad: function () {\r\n         cc.director.getCollisionManager().enabled = true;  \r\n         \r\n\r\n    },\r\n    \r\n    \r\n    onCollisionEnter: function (other, self) {\r\n        this.collision = true;\r\n        this.node.stopAllActions();\r\n\r\n\r\n  \r\n    },\r\n    \r\n    onCollisionStay: function (other, self) {\r\n        this.collision = true;\r\n        \r\n        var otherAabb = other.world.aabb;\r\n        var selfAabb = self.world.aabb.clone();\r\n        var preAabb = self.world.preAabb;\r\n        \r\n        //selfAabb.x = preAabb.x;\r\n        //selfAabb.y = preAabb.y;\r\n        \r\n        //selfAabb.x = self.world.aabb.x;\r\n        if (cc.Intersection.rectRect(selfAabb, otherAabb)) {\r\n            if (selfAabb.xMax > otherAabb.xMax) {\r\n                this.node.x += 1;\r\n            }\r\n            else if (selfAabb.xMin < otherAabb.xMin) {\r\n                this.node.x -= 1;\r\n            }\r\n\r\n        }\r\n\r\n        selfAabb.y = self.world.aabb.y;\r\n        if (cc.Intersection.rectRect(selfAabb, otherAabb)) {\r\n            if (selfAabb.yMax > otherAabb.yMax) {\r\n                this.node.y += 1;\r\n\r\n            }\r\n            else if (selfAabb.yMin < otherAabb.yMin) {\r\n                this.node.y -= 1;\r\n            }\r\n\r\n        }    \r\n        //this.node.y -= 1;\r\n        //this.node.stopAllActions();\r\n    },\r\n    \r\n    onCollisionExit: function () {\r\n       this.collision = false;\r\n    },\r\n\r\n    \r\n    update: function (dt) {\r\n /*       \r\n        if (!this.collision){\r\n         if (Math.floor(this.node.x) != Math.floor(this.loc.x)){\r\n            if (this.loc.x - this.node.x < 0)\r\n              this.node.x--;\r\n            else \r\n              this.node.x++;\r\n              \r\n           // console.log('x=' + this.node.x);\r\n         }\r\n        \r\n          if (Math.floor(this.node.y) != Math.floor(this.loc.y)){\r\n            if (this.loc.y - this.node.y < 0)\r\n              this.node.y--;\r\n            else \r\n              this.node.y++;\r\n              \r\n           // console.log('y=' + this.node.y);\r\n          }\r\n        }\r\n        */\r\n    },\r\n\r\n});\r\n"
  ]
}