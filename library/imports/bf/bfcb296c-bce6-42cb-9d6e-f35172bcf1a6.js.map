{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,aAAK,EAAE,GAAG;;AAEV,YAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;AAEjB,YAAI,EAAE;AACF,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,iBAAS,EAAE;AACX,uBAAS,IAAI;AACb,eAAG,EAAE,EAAE,CAAC,SAAS;SAChB;;KAGJ;;AAED,cAAU,EAAE,oBAAS,CAAC,EAAC;AACnB,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC;;AAEd,YAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,IAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,AAAC,GAC1D,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,IAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA,AAAC,CAAC,CAAC;AACvF,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;KACzD;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;;AAGD,oBAAgB,EAAE,0BAAU,KAAK,EAAE,IAAI,EAAE;AACrC,YAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;AACtE,cAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACjD,gBAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;;;AAGpB,gBAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;AACf,oBAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;aAC7C;SAEH;KACJ;;AAGD,mBAAe,EAAE,yBAAU,KAAK,EAAE;;KAEjC;;AAED,mBAAe,EAAE,2BAAY;;KAE5B;;;;AAID,UAAM,EAAE,gBAAU,EAAE,EAAE;;;KAGrB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: 300,\n        \n        dest: cc.v2(0, 0),\n        \n        hero: {\n            default: null,\n            type: cc.Node,\n        },\n                    \n        arrow_hit: {\n        default: null,\n        url: cc.AudioClip\n        },\n        \n        \n    },\n\n    fireToDest: function(d){\n        this.dest = d;\n        \n        var destance = Math.sqrt((d.x - this.node.position.x) * (d.x - this.node.position.x) +\n                                  (d.y - this.node.position.y) * (d.y - this.node.position.y));\n        this.node.runAction(cc.moveTo(destance/this.speed,d));\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    //子弹碰到敌方建筑，销毁并开火（待改进）\n    onCollisionEnter: function (other, self) {\n        if (other.tag == 1 || other.tag == 2 || other.tag == 3 || other.tag == 4){\n           cc.audioEngine.playEffect(this.arrow_hit, false);\n           this.node.destroy();\n           \n           //不是打到墙。。。\n           if (other.tag != 4){\n               this.hero.getComponent('myHero').refire();\n           }\n           \n        }\n    },\n    \n    \n    onCollisionStay: function (other) {\n        //console.log('on collision stay');\n    },\n    \n    onCollisionExit: function () {\n       //console.log('onCollisionExit');\n    },\n    \n    // called every frame, uncomment this function to activate update callback\n    //子弹发射（待改进）\n    update: function (dt) {\n\n        //this.node.y += this.speed * dt * this.k;\n    },\n});\n"
  ]
}